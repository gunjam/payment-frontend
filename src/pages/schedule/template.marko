<i18n-var/>
<script marko-init>
  const splitSchedule = require("../../lib/split-schedule");
  const formatDate = require("../../lib/format-date");
</script>

<layout-use("../../common/layout.marko") errors=data.errors>

  <layout-put into="page-title">
    <i18n-message key="schedule:heading"/>
  </layout-put>

  <layout-put into="content">

    <a href="/search" class="link-back">
      <i18n-message key="schedule:backLink"/>
    </a>

    <await(schedule from data.schedulePromise)>
      <await-error>
        <p class="lede">
          <i18n-message key="schedule:await.error"/>
        </p>
      </await-error>
      <await-timeout>
        <p class="lede">
          <i18n-message key="schedule:await.timeout"/>
        </p>
      </await-timeout>

      <var currentStatus=schedule.statuses.pop()/>

      <h1 class="heading-xlarge">
        ${schedule.nationalInsuranceNumber}
        <span class="heading-secondary">
          <i18n-message key="schedule:paymentSchedule"
            status=i18n("schedule:status.${currentStatus.name}")/>
        </span>
      </h1>

      <ul>
        <li if(currentStatus.name !== 'stopped')>
          <a href="/stop-schedule/${schedule.id}" class="button button-red">
            <i18n-message key="schedule:form.stop"/>
          </a>
        </li>
      </ul>

      <var split=splitSchedule(schedule.paymentSchedule)/>

      <div class="grid-row">
        <div class="column-one-half">
          <h2 class="heading-medium">
            <i18n-message key="schedule:pastPayments"/>
          </h2>

          <pay-schedule if(split[0].length) schedule=split[0]/>
          <p else>
            <i18n-message key="schedule:noPaymentsMade"/>
          </p>
        </div>
        <div class="column-one-half">
          <if(currentStatus.name === 'stopped')>
            <h2 class="heading-medium">
              <i18n-message key="schedule:paymentsStopped"/>
            </h2>
            <p class="stopped-label">
              <var stoppedDate=(new Date(currentStatus.startDate))/>
              <i18n-message key="schedule:paymentsStoppedMsg"
                timeStart='<time datetime="${stoppedDate.toISOString()}">'
                date=formatDate(stoppedDate) timeStop="</time>"/>
            </p>
          </if>
          <else>
            <h2 class="heading-medium">
              <i18n-message key="schedule:futurePayments"/>
            </h2>
          </else>

          <pay-schedule if(split[1].length) schedule=split[1]/>
          <p else>
            <i18n-message key="schedule:allPaymentsMade"/>
          </p>
        </div>
      </div>
    </await>

  </layout-put>

</layout-use>
