<i18n-var/>
<script marko-init>
  const {generateBSPSchedule} = require('../../lib/generate-bsp-schedule');
  const splitScheduleByDate = require("../../lib/split-schedule-by-date");
  const tomorrow = require("../../lib/tomorrow")();
</script>
<layout-use("../../common/layout.marko")>

  <layout-put into="page-title">
    <i18n-message key="confirmation:heading"/>
  </layout-put>

  <layout-put into="content">

    <a href="/make-a-bsp-payment" class="link-back">
      <i18n-message key="confirmation:backLink"/>
    </a>

    <div class="grid-row">
      <div class="column-two-thirds">

        <h1 class="heading-xlarge">
          <i18n-message key="confirmation:heading"/>
        </h1>

        <table>
          <thead>
            <tr>
              <th colspan="2" class="heading-medium">
                <i18n-message key="confirmation:customerDetails"/>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td><i18n-message key="confirmation:nino"/></td>
              <td>${data.nationalInsuranceNumber}</td>
            </tr>
            <tr>
              <td><i18n-message key="confirmation:nameOnAccount"/></td>
              <td>${data.nameOnAccount}</td>
            </tr>
            <tr>
              <td><i18n-message key="confirmation:sortCode"/></td>
              <td>${data.sortCode}</td>
            </tr>
            <tr>
              <td><i18n-message key="confirmation:accountNumber"/></td>
              <td>${data.accountNumber}</td>
            </tr>
          </tbody>
        </table>

        <h2 class="heading-medium">
          <i18n-message key="confirmation:paymentSchedule"/>
        </h2>

        <await(spaDate from data.dateOfPensionAge)>
          <await-error>
            <p class="lede">
              Error requesting date of state pension age.
            </p>
          </await-error>
          <await-timeout>
            <p class="lede">
              Request for date of state pension age timed out.
            </p>
          </await-timeout>

          <var paymentSchedule=generateBSPSchedule(data.claimDate, data.deathDate, spaDate, data.higherRate, data.startDate)/>
          <var splitSchedule=splitScheduleByDate(paymentSchedule, tomorrow)/>

          <div class="form-group">
            <pay-schedule schedule=splitSchedule[0]/>

            <p class="payment">
              <pay-date date=splitSchedule[1][0].date/> -
              <pay-date date=splitSchedule[1][splitSchedule[1].length - 1].date/>
              <strong class="amount">
                <i18n-message key="confirmation:monthlyPaymentSummary"
                  number=splitSchedule[1].length value=splitSchedule[1][0].amount/>
              </strong>
              <span class="type ${splitSchedule[1][0].type}">
                <i18n-message key="confirmation:monthlyPayments"/>
              </span>
            </p>

            <gov-prog-disclosure summary=i18n('confirmation:showSchedule')>
              <div class="panel panel-border-narrow">
                <pay-schedule schedule=paymentSchedule/>
              </div>
            </gov-prog-disclosure>
          </div>

          <form action="/confirmation" method="post">
            <input type="hidden" name="nationalInsuranceNumber" value=data.nationalInsuranceNumber/>
            <input type="hidden" name="nameOnAccount" value=data.nameOnAccount/>
            <input type="hidden" name="sortCode" value=data.sortCode/>
            <input type="hidden" name="accountNumber" value=data.accountNumber/>
            <input type="hidden" name="paymentSchedule" value=JSON.stringify(paymentSchedule)/>

            <pay-csrf-token/>

            <button type="submit" class="button">
              <i18n-message key="confirmation:confirm"/>
            </button>
          </form>
        </await>

      </div>
    </div>

  </layout-put>

</layout-use>
